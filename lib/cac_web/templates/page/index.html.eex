<style type="text/css">
.dropdown-toggle::after {
  display: inline-block;
  margin-left: .255em;
  vertical-align: .255em;
  content: "";
  border-top: .3em solid;
  border-right: 0px solid transparent;
  border-bottom: 0;
  border-left: 0px solid transparent;
}

.accordion-item {
  background-color: #40407e;
  border: 1px solid rgba(0, 0, 0, .125);
}
</style>
<!--Wrapper Start-->
<div class="" id="subcontent" aria-label="mainbar">




</div>
<!--Wrapper End-->

<script type="text/javascript">
var route_names = [
  { html: "landing.html", title: "Home - 卫理华人年议会 Methodist Chinese Annual Conference", route: "/home" },
    { html: "blog_show.html", title: "Home - 卫理华人年议会 Methodist Chinese Annual Conference", route: "/blogs/:id/:title" },

]

function navigateTo(route, additionalParamString) {
  if (route == null) {
    route = window.location.pathname
  }
  var current_pattern = route.split("/").filter((v, i) => {
    return v != "";
  })
  console.log(current_pattern)

  var match_1 = route_names.filter((rroute, i) => {
    var z = rroute.route.split("/").filter((v, i) => {
      return v != "";
    })
    console.log(z[z.length - 1])

    if (z[z.length - 1].includes(":")) {
      return z.length == current_pattern.length
    } else {

      return z.length == current_pattern.length && z[z.length - 1] == current_pattern[z.length - 1];
    }
  })

  var match_2 =
    match_1.filter((rroute, i) => {
      console.log(rroute)
      var z = rroute.route.split("/").filter((v, i) => {
        return v != "";
      })
      return z[0] == current_pattern[0]
    })

  if (match_2.length > 0) {

    var params = {}
    match_2.forEach((rroute, i) => {
      var z = rroute.route.split("/").forEach((v, ii) => {
        if (v.includes(":")) {
          params[v.replace(":", "")] = current_pattern[ii - 1]
        }
      })
    })
    console.log("params here")
    console.log(params)
    window.pageParams = params
    var xParamString = ""
    if (additionalParamString == null) {
      xParamString = ""
    } else {
      xParamString = additionalParamString
    }

    if (window.back) {
      window.back = false
    } else {
      var stateObj = { fn: `navigateTo('` + route + `', '` + xParamString + `')`, params: params };
      console.log("route")
      console.log(route)
      window.stateObj = stateObj
      window.matchTitle = match_2[0].title
      window.matchRoute = route


      if (Object.keys(params).includes("title")) {
        $("title").html(params.title)
        history.pushState(stateObj, params.title, route);
      } else {
        $("title").html(match_2[0].title)
        history.pushState(stateObj, match_2[0].title, route);
      }
    }
    var html = App.html(match_2[0].html)
    var keys = Object.keys(match_2[0])
    if (keys.includes("skipNav")) {
      $("#subcontent").html(html)

    } else {
      var nav = App.html("blog_nav.html")

      if (keys.includes("customNav")) {
        var nav = App.html(match_2[0].customNav)
      }

      $("#subcontent").html(nav)
      $("#subcontent").append(html)
    }
    return match_2[0]
  } else {
    var html = App.html("landing.html")
    var nav = App.html("blog_nav.html")
    $("#subcontent").html(nav)
    $("#subcontent").append(html)

  }
}

function updatePageParams(obj) {
  window.stateObj = obj
  history.pushState(obj, obj.title, obj.route);
}
navigateTo();
</script>